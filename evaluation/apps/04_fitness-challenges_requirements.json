{
  "app_name": "FitQuest Arcade",
  "context": "Gamified fitness challenges with progress rewards",
  "requirements": [
    {
      "id": "REQ-001",
      "description": "The app shall present a first-time onboarding flow that captures the user's display name and preferred fitness goal.",
      "status": "met",
      "acceptance_criteria": [
        "On first visit, the user is shown a modal requesting a display name and a goal selection.",
        "The user cannot access the main dashboard until both the name and goal are provided.",
        "The captured name and goal are stored locally and reused to personalize subsequent screens."
      ],
      "category": "functional",
      "priority": "high"
    },
    {
      "id": "REQ-002",
      "description": "The app shall display a list of daily fitness challenges categorized by focus area.",
      "status": "met",
      "acceptance_criteria": [
        "The dashboard shows at least five challenge cards with name, difficulty, and reward points.",
        "Category filter buttons update the visible challenge cards without reloading the page.",
        "Selecting a challenge card opens its dedicated detail view."
      ],
      "category": "functional",
      "priority": "high"
    },
    {
      "id": "REQ-003",
      "description": "The app shall provide a challenge detail view with objectives, time estimate, and reward points.",
      "status": "met",
      "acceptance_criteria": [
        "The detail view is reachable from any challenge card on the dashboard.",
        "The detail view displays objective description, estimated time, and reward points.",
        "The detail view includes a start button for launching the challenge."
      ],
      "category": "functional",
      "priority": "high"
    },
    {
      "id": "REQ-004",
      "description": "The app shall allow the user to start a challenge and switch the interface to an active tracking view.",
      "status": "met",
      "acceptance_criteria": [
        "Pressing the start button sets the selected challenge as active in local state.",
        "The active tracking view shows the challenge name, progress controls, and time spent.",
        "The active tracking view provides a button to complete or abandon the challenge."
      ],
      "category": "functional",
      "priority": "high"
    },
    {
      "id": "REQ-005",
      "description": "The app shall let users log repetitions or sets completed within an active challenge.",
      "status": "met",
      "acceptance_criteria": [
        "The tracking view includes controls to increment and decrement completed units.",
        "Each increment updates the user's current progress and total points.",
        "Progress updates are persisted locally so the value remains after navigation."
      ],
      "category": "functional",
      "priority": "high"
    },
    {
      "id": "REQ-006",
      "description": "The app shall show a progress bar that reflects completion percentage of the active challenge.",
      "status": "met",
      "acceptance_criteria": [
        "The progress bar displays the percentage based on logged units versus required units.",
        "The bar animates to the new percentage whenever progress changes.",
        "The bar resets to zero when a new challenge is started."
      ],
      "category": "functional",
      "priority": "high"
    },
    {
      "id": "REQ-007",
      "description": "The app shall track daily check-ins to maintain a workout streak counter.",
      "status": "met",
      "acceptance_criteria": [
        "A daily check-in button is available on the dashboard.",
        "Pressing the button increments the streak counter once per calendar day.",
        "Missing a day resets the streak counter to zero."
      ],
      "category": "functional",
      "priority": "medium"
    },
    {
      "id": "REQ-008",
      "description": "The app shall award achievement badges when users reach predefined milestones.",
      "status": "met",
      "acceptance_criteria": [
        "Achievement badges have defined criteria such as point totals or streak lengths.",
        "When criteria are met, the app displays an award notification and badge icon.",
        "Earned badges are viewable in an achievements panel accessible from the dashboard."
      ],
      "category": "functional",
      "priority": "medium"
    },
    {
      "id": "REQ-009",
      "description": "The app shall maintain a chronological history of completed challenges.",
      "status": "met",
      "acceptance_criteria": [
        "Completing a challenge logs its name, date, and points earned in a history list.",
        "The history list is accessible from the navigation menu.",
        "History entries persist using local storage across sessions."
      ],
      "category": "functional",
      "priority": "medium"
    },
    {
      "id": "REQ-010",
      "description": "The app shall provide a quick challenge generator that suggests a randomized mini challenge.",
      "status": "met",
      "acceptance_criteria": [
        "A quick challenge button generates a challenge with randomized activity and target.",
        "Each generated challenge displays reward points and estimated duration.",
        "The user can accept the mini challenge to add it to the active challenge state."
      ],
      "category": "functional",
      "priority": "low"
    },
    {
      "id": "REQ-011",
      "description": "The app shall implement a leveling system that increases the user's level based on total points.",
      "status": "met",
      "acceptance_criteria": [
        "The dashboard displays the user's current level and total points required for the next level.",
        "Completing challenges adds points and triggers level-up when thresholds are reached.",
        "A level-up animation or message is shown when a new level is achieved."
      ],
      "category": "functional",
      "priority": "medium"
    },
    {
      "id": "REQ-012",
      "description": "The app shall generate a shareable text summary of the user’s weekly progress.",
      "status": "met",
      "acceptance_criteria": [
        "A share button compiles total points, streak, and completed challenges for the week.",
        "The compiled summary is shown in a modal with a copy-to-clipboard option.",
        "Copying the summary provides feedback confirming the text is ready to share."
      ],
      "category": "functional",
      "priority": "low"
    },
    {
      "id": "REQ-013",
      "description": "The app shall allow users to create custom challenges with chosen activities and targets.",
      "status": "met",
      "acceptance_criteria": [
        "A custom challenge builder collects activity name, target units, and reward points.",
        "Submitting the form adds the custom challenge to the daily challenge list.",
        "Custom challenges are stored locally and can be started like predefined challenges."
      ],
      "category": "functional",
      "priority": "medium"
    },
    {
      "id": "REQ-014",
      "description": "The app shall support scheduling rest days that pause streak decay.",
      "status": "met",
      "acceptance_criteria": [
        "Users can mark a specific day as a planned rest day from the dashboard.",
        "Rest day entries appear in the calendar overview with distinct styling.",
        "When a rest day is scheduled, missing a check-in on that date does not reset the streak."
      ],
      "category": "functional",
      "priority": "medium"
    },
    {
      "id": "REQ-015",
      "description": "The app shall present a weekly summary modal highlighting key metrics every seven days.",
      "status": "met",
      "acceptance_criteria": [
        "The summary modal aggregates total points, completed challenges, and average streak.",
        "The modal is automatically triggered after the seventh day of activity logging.",
        "Users can dismiss the modal and view past summaries from a history link."
      ],
      "category": "functional",
      "priority": "low"
    },
    {
      "id": "REQ-016",
      "description": "The app shall provide a sound effects toggle to control audio feedback on interactions.",
      "status": "met",
      "acceptance_criteria": [
        "A sound toggle is available within a settings panel.",
        "Turning the toggle on or off immediately enables or mutes interface sound cues.",
        "The toggle preference is saved locally and restored on reload."
      ],
      "category": "functional",
      "priority": "low"
    },
    {
      "id": "REQ-017",
      "description": "The app shall include a feedback form for users to submit suggestions or issues.",
      "status": "met",
      "acceptance_criteria": [
        "The feedback form collects a category selection and a text message.",
        "Submitting the form stores the feedback entry locally with a timestamp.",
        "Submitted entries are viewable in a feedback log accessible from settings."
      ],
      "category": "functional",
      "priority": "low"
    },
    {
      "id": "REQ-018",
      "description": "The app shall provide an interactive tutorial guiding new users through primary features.",
      "status": "met",
      "acceptance_criteria": [
        "The tutorial consists of a sequence of overlays explaining dashboard sections.",
        "Users can advance or skip the tutorial at any step.",
        "Completion or skipping of the tutorial is stored locally to avoid replaying automatically."
      ],
      "category": "functional",
      "priority": "medium"
    },
    {
      "id": "REQ-019",
      "description": "The app shall display a community leaderboard highlighting the top ten players by points.",
      "status": "partially_met",
      "acceptance_criteria": [
        "A leaderboard tab lists player names, avatars, and total points in descending order.",
        "The leaderboard updates when the local user’s points change.",
        "Users can toggle between global and friends-only views."
      ],
      "category": "functional",
      "priority": "high"
    },
    {
      "id": "REQ-020",
      "description": "The app shall allow the creation of group challenges where users collaborate toward a shared goal.",
      "status": "partially_met",
      "acceptance_criteria": [
        "A group challenge wizard collects challenge name, shared target, and participant slots.",
        "Group challenge progress aggregates individual contributions in real time.",
        "Members receive notifications when the group reaches milestones."
      ],
      "category": "functional",
      "priority": "medium"
    },
    {
      "id": "REQ-021",
      "description": "The app shall support avatar customization with selectable outfits, accessories, and backgrounds.",
      "status": "partially_met",
      "acceptance_criteria": [
        "An avatar customization screen offers at least five options per category.",
        "Changes preview immediately on the avatar display.",
        "Selections are saved and reflected across all app screens."
      ],
      "category": "functional",
      "priority": "low"
    },
    {
      "id": "REQ-022",
      "description": "The app shall provide a reward store where users redeem points for cosmetic items.",
      "status": "partially_met",
      "acceptance_criteria": [
        "The reward store lists items with point costs and descriptions.",
        "Redeeming an item deducts points and adds the item to the user inventory.",
        "Redeemed items can be equipped from within the store screen."
      ],
      "category": "functional",
      "priority": "medium"
    },
    {
      "id": "REQ-023",
      "description": "The app shall render a calendar view marking daily activity, rest days, and challenges completed.",
      "status": "partially_met",
      "acceptance_criteria": [
        "The calendar displays the current month with visual markers for each day’s status.",
        "Clicking a date reveals details of challenges completed on that day.",
        "Users can navigate to previous months to review historical activity."
      ],
      "category": "functional",
      "priority": "low"
    },
    {
      "id": "REQ-024",
      "description": "The app shall allow users to schedule in-app reminders for upcoming challenges.",
      "status": "partially_met",
      "acceptance_criteria": [
        "Users can set a reminder time associated with a specific challenge card.",
        "The app lists all scheduled reminders in a dedicated section.",
        "At the reminder time, the app highlights the challenge and plays a cue."
      ],
      "category": "functional",
      "priority": "medium"
    },
    {
      "id": "REQ-025",
      "description": "The app shall enable users to invite friends by generating shareable challenge codes.",
      "status": "not_met",
      "acceptance_criteria": [
        "An invite button creates a unique code tied to the selected challenge.",
        "The code can be copied or shared directly from the app interface.",
        "Entering a valid code joins the recipient to the originating challenge."
      ],
      "category": "functional",
      "priority": "medium"
    },
    {
      "id": "REQ-026",
      "description": "The app shall offer voice coaching prompts during active challenges using text-to-speech.",
      "status": "not_met",
      "acceptance_criteria": [
        "Users can enable or disable voice coaching from the settings panel.",
        "When enabled, the app announces progress updates at defined intervals.",
        "Voice prompts adjust their content based on the user’s current progress."
      ],
      "category": "functional",
      "priority": "low"
    },
    {
      "id": "REQ-027",
      "description": "The app shall allow users to capture and manage progress photos for challenge milestones.",
      "status": "not_met",
      "acceptance_criteria": [
        "A progress photo gallery is accessible from the dashboard.",
        "Users can upload or capture photos tagged to specific challenges.",
        "Photos can be browsed chronologically and deleted individually."
      ],
      "category": "functional",
      "priority": "low"
    },
    {
      "id": "REQ-028",
      "description": "The app shall calculate estimated calories burned based on user input for each challenge session.",
      "status": "not_met",
      "acceptance_criteria": [
        "Challenge completion form includes inputs for duration and intensity level.",
        "Submitting the form displays an estimated calorie value using a client-side formula.",
        "The estimated calories are logged alongside the challenge history entry."
      ],
      "category": "functional",
      "priority": "medium"
    },
    {
      "id": "REQ-029",
      "description": "The app shall export the user’s progress data to a downloadable JSON file.",
      "status": "not_met",
      "acceptance_criteria": [
        "An export button aggregates challenges, streaks, and achievements into a JSON object.",
        "The export process triggers a file download without leaving the app.",
        "The exported JSON matches the data currently stored locally."
      ],
      "category": "functional",
      "priority": "medium"
    },
    {
      "id": "REQ-030",
      "description": "The app shall deliver multi-stage quest lines that unlock sequential challenges and rewards.",
      "status": "not_met",
      "acceptance_criteria": [
        "Quest lines consist of at least three linked challenges with prerequisite completion.",
        "Completing a stage unlocks the next stage and grants a quest-specific reward.",
        "Quest progress is tracked separately from regular challenges and displayed in a dedicated view."
      ],
      "category": "functional",
      "priority": "high"
    }
  ]
}