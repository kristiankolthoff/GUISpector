{
  "app_name": "Budget & Spend Insights",
  "context": "Simple Budget & Spend Insights",
  "requirements": [
    {
      "id": "REQ-001",
      "description": "Display a dashboard summary showing total income, total expenses, and balance for the currently selected month.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "Dashboard header shows current month totals immediately after app loads.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Income and expense totals recalculate instantly after any transaction is saved, edited, or removed.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Displayed balance equals total income minus total expenses for the selected month without rounding errors.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "high",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "AT41"
    },
    {
      "id": "REQ-002",
      "description": "Allow the user to add a new expense transaction through a modal form capturing amount, date, category, and memo.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "Add transaction button opens an expense form overlay without navigating away.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Expense form enforces required amount, date, and category fields before enabling save.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Saving an expense appends it to the transaction list and updates monthly totals immediately.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "high",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "ET86"
    },
    {
      "id": "REQ-003",
      "description": "Allow the user to add income transactions that contribute to monthly income totals.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "Income form allows selecting income type and entering amount, date, and memo.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Saved income entries increase the monthly income total instantly.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Income entries are visually distinguished from expenses in the transaction list.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "high",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "EK37"
    },
    {
      "id": "REQ-004",
      "description": "Allow the user to create custom expense categories that become available throughout the app.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "Category selector displays default categories such as Groceries, Transport, and Entertainment.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "User can create a new category name from within the selector and have it saved for future use.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Categories persist in localStorage and become available across all relevant forms after creation.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "medium",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "NS52"
    },
    {
      "id": "REQ-005",
      "description": "Provide month navigation controls to view previous and next month budgets without page reloads.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "Month navigation control lets user move to previous and next months without page reload.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Selecting a different month filters the transaction list to entries in that month.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Selected month state persists across visits using localStorage.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "high",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "DA41"
    },
    {
      "id": "REQ-006",
      "description": "Maintain a transaction list sorted by date in descending order with clear formatting.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "Transaction list displays both income and expenses in date-descending order.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Each transaction row shows amount, category, memo, and type badge.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Sorting automatically re-applies after every create, edit, or delete action.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "medium",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "IU14"
    },
    {
      "id": "REQ-007",
      "description": "Support inline editing of existing transactions to adjust details quickly.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "Clicking edit on a transaction opens an inline form populated with existing values.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Saving edits updates the transaction record and recalculates affected totals.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Cancelling an edit restores the original transaction content without changes.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "high",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "BS00"
    },
    {
      "id": "REQ-008",
      "description": "Allow users to delete transactions with confirmation to prevent accidental loss.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "Delete icon is visible on every transaction row.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Selecting delete triggers a confirmation prompt before removal.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Confirmed deletions remove the entry from list, chart, and storage immediately.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "high",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "PB13"
    },
    {
      "id": "REQ-009",
      "description": "Persist all transactions and settings using browser localStorage automatically.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "All transactions and settings persist via window.localStorage after each save action.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Reloading the app restores the last saved data automatically.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Clearing browser storage removes data and the app presents an empty state.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "high",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "KJ77"
    },
    {
      "id": "REQ-010",
      "description": "Provide a category filter allowing multi-selection to refine the transaction list and charts.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "Category filter component allows selecting one or multiple categories simultaneously.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Applying category filter narrows the transaction list to matching entries.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Clearing the filter returns the list and chart to showing all categories.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "medium",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "OJ69"
    },
    {
      "id": "REQ-011",
      "description": "Provide keyword search across transaction memos with real-time feedback.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "Search box filters transactions in real time as the user types keywords.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Search matches against memo text regardless of character casing.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Emptying the search field restores the full transaction list.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "medium",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "TD38"
    },
    {
      "id": "REQ-012",
      "description": "Display a spending by category bar chart that reacts to the active data set.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "Spending by category bar chart updates instantly when data changes.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Each bar is labeled with category name and total amount.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Chart respects active category filters and month selection.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "medium",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "QM69"
    },
    {
      "id": "REQ-013",
      "description": "Provide quick-add expense templates for frequent purchases.",
      "status": "partially_met",
      "acceptance_criteria": [
        {
          "text": "At least three quick-add buttons with predefined amounts are available on the expense form.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Clicking a quick-add button prepopulates the expense amount and category fields.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Users can customize the quick-add presets directly within the app interface.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        }
      ],
      "category": "functional",
      "priority": "low",
      "annotations": {
        "ai": "partially_met",
        "ann1_ante": "partially_met",
        "ann1_post": "partially_met",
        "ann2_ante": "partially_met",
        "ann2_post": "partially_met"
      },
      "rand_id": "OR87"
    },
    {
      "id": "REQ-014",
      "description": "Allow users to set a monthly budget threshold per month.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "Budget settings panel lets user input a monthly budget amount.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Budget value is stored per month in localStorage.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Budget amount is referenced by dashboards and warnings throughout the app.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "high",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "TB30"
    },
    {
      "id": "REQ-015",
      "description": "Display a warning when spending exceeds the configured monthly budget.",
      "status": "partially_met",
      "acceptance_criteria": [
        {
          "text": "When total expenses exceed the monthly budget, a warning banner appears above the dashboard.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Warning banner lists the top overspending category contributing to the threshold breach.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        },
        {
          "text": "Banner reappears automatically if dismissed while overspending condition remains true.",
          "ann1_ante": "met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        }
      ],
      "category": "functional",
      "priority": "high",
      "annotations": {
        "ai": "partially_met",
        "ann1_ante": "partially_met",
        "ann1_post": "partially_met",
        "ann2_ante": "partially_met",
        "ann2_post": "partially_met"
      },
      "rand_id": "WA86"
    },
    {
      "id": "REQ-016",
      "description": "Allow users to customize category colors used in charts and badges.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "Category settings allow selecting a custom color for each category via a color picker.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Updated colors immediately affect the bar chart and transaction badges.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Selected colors persist after app reloads.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "low",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "MG70"
    },
    {
      "id": "REQ-017",
      "description": "Generate insight summaries highlighting notable spending patterns.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "Insights section identifies the highest spending category for the current month.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Insights section highlights days with no spending streaks longer than three days.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Insight text updates automatically with any transaction change.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "medium",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "MI61"
    },
    {
      "id": "REQ-018",
      "description": "Allow users to duplicate an existing transaction for faster entry of similar items.",
      "status": "partially_met",
      "acceptance_criteria": [
        {
          "text": "Duplicate action is accessible from each transaction row.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Executing duplicate pre-fills a new transaction form with the original details and allows date adjustment before saving.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "User can change duplicated transaction type if desired before committing.",
          "ann1_ante": "met",
          "ann1_post": "not_met",
          "ann2_ante": "met",
          "ann2_post": "not_met"
        }
      ],
      "category": "functional",
      "priority": "low",
      "annotations": {
        "ai": "partially_met",
        "ann1_ante": "met",
        "ann1_post": "partially_met",
        "ann2_ante": "met",
        "ann2_post": "partially_met"
      },
      "rand_id": "SG21"
    },
    {
      "id": "REQ-019",
      "description": "Provide an undo option for recently deleted transactions within the session.",
      "status": "partially_met",
      "acceptance_criteria": [
        {
          "text": "After deleting a transaction, an undo toast appears with a 10-second countdown.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Clicking undo restores the most recently deleted transaction to its prior position and recalculates totals.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "The undo mechanism maintains a stack of the last three deletions within the session.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        }
      ],
      "category": "functional",
      "priority": "medium",
      "annotations": {
        "ai": "partially_met",
        "ann1_ante": "partially_met",
        "ann1_post": "partially_met",
        "ann2_ante": "partially_met",
        "ann2_post": "partially_met"
      },
      "rand_id": "CU65"
    },
    {
      "id": "REQ-020",
      "description": "Offer a view switcher between list-focused and insights-focused layouts.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "View switcher toggles between 'List Focus' and 'Insights Focus' layouts.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Selected view preference persists in localStorage and is applied on next visit.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Both views retain access to core actions such as add transaction and filters.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "medium",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "ML86"
    },
    {
      "id": "REQ-021",
      "description": "Support tagging transactions with arbitrary labels and filtering by those tags.",
      "status": "partially_met",
      "acceptance_criteria": [
        {
          "text": "Transaction form allows entering multiple freeform tags for each entry.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Tags display as chips on transaction rows and can be removed inline.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        },
        {
          "text": "Filter panel includes a tags filter that lets users view only transactions with selected tags.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        }
      ],
      "category": "functional",
      "priority": "low",
      "annotations": {
        "ai": "partially_met",
        "ann1_ante": "partially_met",
        "ann1_post": "partially_met",
        "ann2_ante": "partially_met",
        "ann2_post": "partially_met"
      },
      "rand_id": "YG77"
    },
    {
      "id": "REQ-022",
      "description": "Provide a dynamic daily spending allowance suggestion based on remaining budget.",
      "status": "partially_met",
      "acceptance_criteria": [
        {
          "text": "App calculates daily spending allowance based on remaining budget and days left in month.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Allowance updates immediately after adding or editing a transaction.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Allowance banner suggests specific spending adjustments when the daily limit is exceeded.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        }
      ],
      "category": "functional",
      "priority": "medium",
      "annotations": {
        "ai": "partially_met",
        "ann1_ante": "partially_met",
        "ann1_post": "partially_met",
        "ann2_ante": "partially_met",
        "ann2_post": "partially_met"
      },
      "rand_id": "ZC20"
    },
    {
      "id": "REQ-023",
      "description": "Allow users to reset all stored data from a settings action.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "Settings panel contains a 'Reset all data' button.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Reset action prompts user for confirmation before proceeding.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Confirmed reset clears localStorage and reloads the app to an initial empty state.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "low",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "KM63"
    },
    {
      "id": "REQ-024",
      "description": "Display the average daily expense value for the selected month.",
      "status": "met",
      "acceptance_criteria": [
        {
          "text": "Dashboard displays the average daily expense for the selected month.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Average recalculates after any transaction change.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        },
        {
          "text": "Average excludes income transactions from its computation.",
          "ann1_ante": "met",
          "ann1_post": "met",
          "ann2_ante": "met",
          "ann2_post": "met"
        }
      ],
      "category": "functional",
      "priority": "medium",
      "annotations": {
        "ai": "met",
        "ann1_ante": "met",
        "ann1_post": "met",
        "ann2_ante": "met",
        "ann2_post": "met"
      },
      "rand_id": "EX16"
    },
    {
      "id": "REQ-025",
      "description": "Allow users to create and switch between multiple personal budget profiles.",
      "status": "not_met",
      "acceptance_criteria": [
        {
          "text": "User can create separate budget profiles each with isolated data.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        },
        {
          "text": "Profile switcher allows swapping between profiles without page reload.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        },
        {
          "text": "Active profile selection persists across sessions.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        }
      ],
      "category": "functional",
      "priority": "low",
      "annotations": {
        "ai": "not_met",
        "ann1_ante": "not_met",
        "ann1_post": "not_met",
        "ann2_ante": "not_met",
        "ann2_post": "not_met"
      },
      "rand_id": "GI29"
    },
    {
      "id": "REQ-026",
      "description": "Support recurring transactions that auto-populate future months based on frequency.",
      "status": "not_met",
      "acceptance_criteria": [
        {
          "text": "Users can mark transactions as recurring with a repeat frequency.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        },
        {
          "text": "System auto-generates future instances on the first load of each month.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        },
        {
          "text": "Users can pause or cancel a recurring series from a management view.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        }
      ],
      "category": "functional",
      "priority": "medium",
      "annotations": {
        "ai": "not_met",
        "ann1_ante": "not_met",
        "ann1_post": "not_met",
        "ann2_ante": "not_met",
        "ann2_post": "not_met"
      },
      "rand_id": "JF25"
    },
    {
      "id": "REQ-027",
      "description": "Provide a print-friendly monthly summary view.",
      "status": "not_met",
      "acceptance_criteria": [
        {
          "text": "Printable view button opens a print-friendly summary in a new window.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        },
        {
          "text": "Printable summary includes totals, charts, and list formatted for A4.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        },
        {
          "text": "Button triggers browser print dialog with pre-filled document title.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        }
      ],
      "category": "functional",
      "priority": "low",
      "annotations": {
        "ai": "not_met",
        "ann1_ante": "not_met",
        "ann1_post": "not_met",
        "ann2_ante": "not_met",
        "ann2_post": "not_met"
      },
      "rand_id": "CL13"
    },
    {
      "id": "REQ-028",
      "description": "Enable natural language input for adding transactions via typed sentences.",
      "status": "not_met",
      "acceptance_criteria": [
        {
          "text": "Users can enter phrases like 'Spent 12 on lunch yesterday' into a dedicated input.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        },
        {
          "text": "System parses amount, category, and date from natural language without additional prompts.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        },
        {
          "text": "Parsed transaction preview appears for confirmation before saving.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        }
      ],
      "category": "functional",
      "priority": "medium",
      "annotations": {
        "ai": "not_met",
        "ann1_ante": "not_met",
        "ann1_post": "not_met",
        "ann2_ante": "not_met",
        "ann2_post": "not_met"
      },
      "rand_id": "KX15"
    },
    {
      "id": "REQ-029",
      "description": "Allow drag-and-drop reordering of categories to influence list and chart order.",
      "status": "not_met",
      "acceptance_criteria": [
        {
          "text": "Category management view lists categories as draggable items.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        },
        {
          "text": "Dragging categories reorders them and updates ordering in all dropdowns.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        },
        {
          "text": "New order persists across sessions via localStorage.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        }
      ],
      "category": "functional",
      "priority": "low",
      "annotations": {
        "ai": "not_met",
        "ann1_ante": "not_met",
        "ann1_post": "not_met",
        "ann2_ante": "not_met",
        "ann2_post": "not_met"
      },
      "rand_id": "NB13"
    },
    {
      "id": "REQ-030",
      "description": "Provide automatic currency conversion for foreign currency transactions.",
      "status": "not_met",
      "acceptance_criteria": [
        {
          "text": "Expense form allows selecting a foreign currency code.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        },
        {
          "text": "System fetches up-to-date exchange rate and converts amount to base currency.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        },
        {
          "text": "Converted amount and original currency details display in transaction entry.",
          "ann1_ante": "not_met",
          "ann1_post": "not_met",
          "ann2_ante": "not_met",
          "ann2_post": "not_met"
        }
      ],
      "category": "functional",
      "priority": "medium",
      "annotations": {
        "ai": "not_met",
        "ann1_ante": "not_met",
        "ann1_post": "not_met",
        "ann2_ante": "not_met",
        "ann2_post": "not_met"
      },
      "rand_id": "VI94"
    }
  ]
}
